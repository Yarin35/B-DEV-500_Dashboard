version: "3.8"
services:
  server:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - NODE_ENV=development
    volumes:
      - ./backend:/app
    stdin_open: true
    tty: true
    depends_on:
      - mysql

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app

  mysql:
    image: mysql:8.0
    container_name: trello_mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db-data:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/backup_mysql.sh:/backup_mysql.sh
      - ./db/backup_restore.sh:/backup_restore.sh
      - ./db/wait-for-it.sh:/wait-for-it.sh
      - ./db/backups_db:/backups_db
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: trello_phpmyadmin
    environment:
      PMA_HOST: ${PMA_HOST}
      PMA_PORT: ${PMA_PORT}
      PMA_USER: ${PMA_USER}
      PMA_PASSWORD: ${PMA_PASSWORD}
    ports:
      - "8081:80"
    depends_on:
      - mysql

  cron:
    container_name: cron
    build:
      context: ./db
      dockerfile: Dockerfile
    depends_on:
      - mysql

volumes:
  db-data:
